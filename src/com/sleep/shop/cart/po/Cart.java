package com.sleep.shop.cart.po;

import java.util.Collection;
import java.util.LinkedHashMap;
import java.util.Map;

public class Cart {
	private Map<Integer,CartItem> map = new LinkedHashMap<>();
	public Collection<CartItem> getCartitem(){
		return map.values();
	}
	private double total;
	public double getTotal() {
		return total;
	}
	public void setTotal(double total) {
		this.total = total;
	}
	//将购物项添加到购物车
	public void addCart(CartItem cartItem){
		Integer pid = cartItem.getProduct().getPid();
		// 判断购物车中是否已经存在该购物项:
		if(map.containsKey(pid)){
			// 存在
			CartItem _cartItem = map.get(pid);// 获得购物车中原来的购物项
			_cartItem.setCount(_cartItem.getCount()+cartItem.getCount());
		}else{
			// 不存在
			map.put(pid, cartItem);
		}
		// 设置总计的值
		total += cartItem.getSubtotal();	
	}
	// 从购物车移除购物项
		public void removeCart(Integer pid) {
			// 将购物项移除购物车:
			CartItem cartItem = map.remove(pid);
			// 总计 = 总计 -移除的购物项小计:
			total -= cartItem.getSubtotal();
		}

		// 清空购物车
		public void clearCart() {
			// 将所有购物项清空
			map.clear();
			// 将总计设置为0
			total = 0;
		}
}
